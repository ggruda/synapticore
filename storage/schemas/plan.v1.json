{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "https://synapticore.ai/schemas/plan/v1",
    "title": "Synapticore Plan Schema v1",
    "description": "Strict schema for validated plan format with tasks array",
    "type": "object",
    "required": ["version", "ticket_id", "summary", "estimated_hours", "risk_level", "test_strategy", "steps", "files_affected"],
    "properties": {
        "version": {
            "type": "string",
            "const": "1.0",
            "description": "Schema version"
        },
        "ticket_id": {
            "type": "string",
            "pattern": "^[A-Z]{2,10}-[0-9]{1,8}$",
            "description": "External ticket identifier (e.g., JIRA-123)"
        },
        "summary": {
            "type": "string",
            "minLength": 10,
            "maxLength": 500,
            "description": "High-level summary of the plan"
        },
        "estimated_hours": {
            "type": "number",
            "minimum": 0.5,
            "maximum": 40,
            "description": "Estimated hours for implementation"
        },
        "risk_level": {
            "type": "string",
            "enum": ["low", "medium", "high", "critical"],
            "description": "Overall risk assessment"
        },
        "test_strategy": {
            "type": "string",
            "minLength": 10,
            "maxLength": 1000,
            "description": "Description of testing approach"
        },
        "steps": {
            "type": "array",
            "minItems": 1,
            "maxItems": 50,
            "description": "Array of implementation tasks",
            "items": {
                "type": "object",
                "required": ["id", "intent", "targets", "rationale", "acceptance", "estimated_minutes"],
                "properties": {
                    "id": {
                        "type": "string",
                        "pattern": "^step_[0-9]+$",
                        "description": "Unique step identifier"
                    },
                    "intent": {
                        "type": "string",
                        "enum": ["add", "modify", "remove", "add_test", "refactor", "document", "configure"],
                        "description": "Type of change to be made"
                    },
                    "targets": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 20,
                        "description": "Files or components to be modified",
                        "items": {
                            "type": "object",
                            "required": ["path", "type"],
                            "properties": {
                                "path": {
                                    "type": "string",
                                    "pattern": "^[a-zA-Z0-9_/\\-\\.]+$",
                                    "description": "File path or component identifier"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": ["file", "class", "method", "function", "config", "schema", "test"],
                                    "description": "Type of target"
                                },
                                "line_range": {
                                    "type": "object",
                                    "properties": {
                                        "start": {
                                            "type": "integer",
                                            "minimum": 1
                                        },
                                        "end": {
                                            "type": "integer",
                                            "minimum": 1
                                        }
                                    },
                                    "required": ["start", "end"],
                                    "description": "Optional line range for modifications"
                                }
                            }
                        }
                    },
                    "rationale": {
                        "type": "string",
                        "minLength": 10,
                        "maxLength": 500,
                        "description": "Explanation of why this step is necessary"
                    },
                    "acceptance": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 10,
                        "description": "Acceptance criteria for this step",
                        "items": {
                            "type": "string",
                            "minLength": 5,
                            "maxLength": 200
                        }
                    },
                    "estimated_minutes": {
                        "type": "integer",
                        "minimum": 5,
                        "maximum": 480,
                        "description": "Estimated time in minutes"
                    },
                    "dependencies": {
                        "type": "array",
                        "description": "Step IDs that must be completed before this step",
                        "items": {
                            "type": "string",
                            "pattern": "^step_[0-9]+$"
                        }
                    },
                    "risk_factors": {
                        "type": "array",
                        "description": "Identified risk factors for this step",
                        "items": {
                            "type": "string",
                            "enum": [
                                "database_migration",
                                "api_change",
                                "breaking_change",
                                "security_sensitive",
                                "performance_impact",
                                "external_dependency",
                                "config_change",
                                "data_loss_risk",
                                "authentication_change",
                                "authorization_change"
                            ]
                        }
                    }
                }
            }
        },
        "files_affected": {
            "type": "array",
            "description": "List of all files that will be modified",
            "items": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9_/\\-\\.]+$"
            }
        },
        "prerequisites": {
            "type": "object",
            "description": "Prerequisites for implementation",
            "properties": {
                "dependencies": {
                    "type": "array",
                    "description": "Required dependencies or packages",
                    "items": {
                        "type": "string"
                    }
                },
                "environment": {
                    "type": "array",
                    "description": "Required environment variables or configurations",
                    "items": {
                        "type": "string"
                    }
                },
                "permissions": {
                    "type": "array",
                    "description": "Required permissions or access",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "rollback_strategy": {
            "type": "string",
            "maxLength": 1000,
            "description": "Strategy for rolling back changes if needed"
        },
        "success_metrics": {
            "type": "array",
            "description": "Metrics to measure success",
            "items": {
                "type": "object",
                "required": ["metric", "target"],
                "properties": {
                    "metric": {
                        "type": "string",
                        "description": "Name of the metric"
                    },
                    "target": {
                        "type": "string",
                        "description": "Target value or condition"
                    }
                }
            }
        },
        "metadata": {
            "type": "object",
            "description": "Additional metadata",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "model": {
                    "type": "string",
                    "description": "AI model used for generation"
                },
                "temperature": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 2
                },
                "confidence": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        }
    },
    "additionalProperties": false
}